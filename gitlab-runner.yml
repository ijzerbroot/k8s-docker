apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    k8s-app: gitlab-runner
  name: gitlab-runner-toml
  namespace: gitlab-build
data:
  config.toml: |-
    concurrent = 1
    check_interval = 0

    [[runners]]
      name = "gitlab-runner"
      request_concurrency = 4
      url = "http://gitlab.k8shc/ci"
      token = "c45c570d9b84ad0655a3a31eddccb2"
      executor = "kubernetes"
      [runners.cache]
      [runners.kubernetes]
        host = ""
        bearer_token_overwrite_allowed = false
        image = ""
        namespace = "gitlab-build"
        namespace_overwrite_allowed = ""
        privileged = true
        cpu_limit = "100m"
        extra_hosts = ["gitlabreg.k8shc:192.168.56.10","gitlab.k8shc:192.168.56.10"]
        memory_limit = "1Gi"
        clone_url = "http://gitlab.k8shc"
        service_cpu_limit = "100m"
        service_memory_limit = "1Gi"
        helper_cpu_limit = "100m"
        helper_memory_limit = "100Mi"
        pull_policy = "if-not-present"
        terminationGracePeriodSeconds = 10
        poll_interval = 5
        poll_timeout = 360
        service_account_overwrite_allowed = ""
        pod_annotations_overwrite_allowed = ""
        [runners.kubernetes.volumes]
---
apiVersion: v1
kind: Namespace
metadata:
  name: gitlab-build
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    k8s-app: gitlab-runner
  name: gitlab-runner-cm
  namespace: gitlab-build
data:
  REGISTER_NON_INTERACTIVE: "true"
  CI_SERVER_URL: "http://gitlab.k8shc/ci"
  METRICS_SERVER: "0.0.0.0:9100"
  RUNNER_REQUEST_CONCURRENCY: "4"
  RUNNER_EXECUTOR: "kubernetes"
  KUBERNETES_NAMESPACE: "gitlab-build"
  KUBERNETES_PRIVILEGED: "true"
  KUBERNETES_CPU_LIMIT: "100m"
  KUBERNETES_MEMORY_LIMIT: "1Gi"
  KUBERNETES_SERVICE_CPU_LIMIT: "100m"
  KUBERNETES_SERVICE_MEMORY_LIMIT: "1Gi"
  KUBERNETES_HELPER_CPU_LIMIT: "100m"
  KUBERNETES_HELPER_MEMORY_LIMIT: "100Mi"
  KUBERNETES_PULL_POLICY: "if-not-present"
  KUBERNETES_TERMINATIONGRACEPERIODSECONDS: "10"
  KUBERNETES_POLL_INTERVAL: "5"
  KUBERNETES_POLL_TIMEOUT: "360"
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: gitlab-runner
  labels:
    k8s-app: gitlab-runner
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
rules:
  - apiGroups: [""]
    resources: ["*"]
    verbs: ["*"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  namespace: gitlab-build
  name: gitlab-runner
  labels:
    k8s-app: gitlab-runner
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
subjects:
- kind: ServiceAccount
  name: gitlab-runner
  namespace: gitlab-build
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: gitlab-runner
  apiGroup: ""
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitlab-runner
  namespace: gitlab-build
  labels:
    k8s-app: gitlab-runner
    version: v1
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: gitlab-runner
  namespace: gitlab-build
  labels:
    k8s-app: gitlab-runner
    version: v1
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: gitlab-runner
      version: v1
  template:
    metadata:
      labels:
        k8s-app: gitlab-runner
        version: v1
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccountName: gitlab-runner
      hostname: gitlab-runner
      volumes:
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
      - name: toml
        configMap:
          name: gitlab-runner-toml
          items:
           - key: config.toml
             path: config.toml
          defaultMode: 0644
      hostAliases:
      - ip: "192.168.56.10"
        hostnames:
        - "gitlab.k8shc"
        - "gitlabreg.k8shc"
      containers:
        - image: gitlab/gitlab-runner:latest
#            allowPrivilegeEscalation: false
          name: gitlab-runner
#          securityContext:
#            allowPrivilegeEscalation: false
#          resources:
            # need more cpu upon initialization, therefore burstable class
#            limits:
#              memory: 1200Mi
#            requests:
#              memory: 800Mi
          envFrom:
          - configMapRef:
              name: gitlab-runner-cm
          volumeMounts:
            - mountPath: /var/run/docker.sock
              name: docker-socket
#            - mountPath: /etc/gitlab-runner
#              name: toml
